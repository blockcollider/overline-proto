syntax = "proto3";

package bc;

import "core.proto";

service Rover {
    // Sends a greeting
    rpc Join (RoverIdent) returns (stream RoverMessage) {}

    // Rovers sends block collected from the respective network
    rpc CollectBlock (Block) returns (Null) {}

    // Check is TX reciveved in rover is watched and before settlement height
    rpc IsBeforeSettleHeight(SettleTxCheckReq) returns (SettleTxCheckResponse) {}
}

message RoverIdent {
    string rover_name = 1;
}

enum RoverMessageType {
    FetchBlock = 0;
    RequestResync = 1;
}

message RoverMessage {
    RoverMessageType type = 1;
    oneof payload {
        Resync resync = 2;
        FetchBlock fetch_block = 3;
    }
    message Resync {
        string from_block = 1;
        string to_block = 2;
    }

    message FetchBlock {
        string from_block = 1;
        string to_block = 2;
    }
}


message SettleTxCheckReq {
  string addr_to = 1;
  string addr_from = 2;
  string bridged_chain = 3;
}

message SettleTxCheckResponse {
  bool is_before_settlement_height = 1;
}
