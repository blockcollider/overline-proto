const test = require("tape");

const {
  serializeForUsb,
  serializeForBle,
  MessageReader,
  WirelessMessagePool,
  WirelessMessageSlicer,
  codec,
} = require("../util/wireless-bridge");

const { BcBlock } = require("../proto/core_pb");

test("codec wireless<->core", function (t) {
  t.plan(1);

  const bytes = Buffer.from(
    "0a406664646336353164373837363462623862356333366563346238393438303431353137613166373432343065393935373137363835343338393538333262316212406361383361653137353035306263366531333861646366656631653166386137393230313932646230356534373230323337383765376662663537656164623718012001288becf901322a3078336532653763656663613766376432653366346663646462363738613438643531323362326239353a0f33323435343237323032333934393140ece7c986064a40316335353062333066303336383863663238326462663464663561393039313437653937613961613234306333393131353936366531636561333765663561655240383737616562643466316431306434313365313064356536643733643838633031353234343864393838613764613536666537333664383539636133626233345a0f3332363837363932353439373732366216313332313035363234323030343230323536343632306a133631383337323833343739393630353834343270288801e534920140383762326263336631326533646564383038633664346239623532383338316661326137653935666632333638626139333139316139343935646161376635309a012a307832386239346635386231316163393435333431333239646266326535656637663862643434323235a00101aa01b7010801122a3078336532653763656663613766376432653366346663646462363738613438643531323362326239351a40396436613865386239343031646339313430323932353862313563623261663363306463653763333534656535306564653231313465316463616130303466632201303001423b0a09022b1c8c1227a0000012010118292229002a2b01950220925d42f29bf73da9343119609aa932be84da5014a58a87c084c763722e6ae5bd181a48eeecf901c00102ca01d7080ad8010a036274631240303030303030303030303030303030303030303864363036366364623039663663636235393539613761373338396535343862663539343865313731386135381a40303030303030303030303030303030303030306134616633346438383265646437333564666462616635396532363764636661376166633433366237366434382098c2a7b0a32f288d832a324036303837343266643832643838663131633331636437663534613834333762363937323065643166633462383637393533393932316338633139383136656232385e12df010a0365746812423078626666383564353766363063323932383436633930653039663661396661366234643533303334646364323364396335313938656162343064626636616361391a4230783763346134653437616663333964616335633461666232653965343930346138363037353133326630366630323630323164346434393735393531336437306220f8adcdb0a32f2899ad8606324230783166646531323436656433386562373535663532616161323435616435616230353362656436633732663833376666393963313834633637316464623238623638051ac1010a036c736b1213373538323138303934353431363236373036371a143131333434383232393331313937333339353035209094d3b0a32f289291c2073280013362353439623636656233373834313966313936356165346264353037323030623032346462336461616462666362376438343135633138326265353962333237343765353034326332316261633833383863303338653137366235396331646239323935633637333863386231343366663234353337653138653038306535380122df010a036e656f12423078373330646462663039646232373865393831373833626361333534383361363930636536633134316462366639306566643639656566353364383865303533371a4230786332323034613362383333393661333063333435663530393037323165323564313834376539313366356265633336306435646366656336656338336165616220e8eec7b0a32f28fdc8cc03324230786635316436663738363965623930613736356662363463303435346334346364346230353236383738353134636261316532346237663831633463633563306238012af1010a03776176122b4465413746534b6f4131586f766643477a5a6556357871456658734d5734574241546d794d66634a6e44371a2c453434337579454345385161796d313436725556546639486f6b426831694b42384461585a584d3172385552209cffbfb0a32f28dcc7a10132800164616130336532376435623735353331613261646331616131316365303565323134373439336237316161373666613266383964663432333333316461633735386166316462346566646235326338313832396331633536326431383333653639656134356261353539353962623634383136336437623730333466376131353802d2014064363566666461386135363162353363303933373765663764336565396562626631386136313863363033666166323633316331626262376436366130336163",
    "hex"
  );
  const wirelessBcBlock = codec.encodeBcBlockForWireless(bytes);
  console.log(bytes.length, wirelessBcBlock.length);
  // console.log(WirelessBcBlock.deserializeBinary(wirelessBcBlock).toObject())
  const codecBytes = codec.decodeWirelessBcBlockForBcnode(wirelessBcBlock);
  // t.deepEquals(bytes, Buffer.from(codecBytes))
  t.deepEquals(
    BcBlock.deserializeBinary(bytes).toObject(),
    BcBlock.deserializeBinary(codecBytes).toObject()
  );
});
// test('test using promises', async function (t) {
//     const result = await someAsyncThing();
//     t.ok(result);
// });
